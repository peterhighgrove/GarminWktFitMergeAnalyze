/////////////////////////////////////////////////////////////////////////////////////////////
// Copyright 2024 Garmin International, Inc.
// Licensed under the Flexible and Interoperable Data Transfer (FIT) Protocol License; you
// may not use this file except in compliance with the Flexible and Interoperable Data
// Transfer (FIT) Protocol License.
/////////////////////////////////////////////////////////////////////////////////////////////
// ****WARNING****  This file is auto-generated!  Do NOT edit this file.
// Profile Version = 21.141.0Release
// Tag = production/release/21.141.0-0-g2aa27e1
/////////////////////////////////////////////////////////////////////////////////////////////

package com.garmin.fit;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;

public class BufferedRecordMesgBroadcaster implements RecordMesgListener{
    private BufferedRecordMesg bufferedRecordMesg;
    private ArrayList<BufferedRecordMesgListener> listeners;

    public BufferedRecordMesgBroadcaster() {
        String timeStamp = new SimpleDateFormat("yyyyMMdd_HHmmss").format(Calendar.getInstance().getTime());
        System.out.println("-- START Contructor BufferedRecordMesgBroadcaster. " + timeStamp);
        bufferedRecordMesg = new BufferedRecordMesg();
        timeStamp = new SimpleDateFormat("yyyyMMdd_HHmmss").format(Calendar.getInstance().getTime());
        System.out.println("-- END Contructor BufferedRecordMesgBroadcaster. " + timeStamp);
        listeners = new ArrayList<BufferedRecordMesgListener>();
    }
  
    public void addListener(BufferedRecordMesgListener mesgListener) {
        listeners.add(mesgListener);
    }

    public void removeListener(BufferedRecordMesgListener mesgListener) {
        listeners.remove(mesgListener);
    }

    public void onMesg(final RecordMesg mesg) {
        bufferedRecordMesg.setFields(mesg);

        for (final BufferedRecordMesgListener listener : listeners) {
            listener.onMesg(bufferedRecordMesg);
        }
    }
}
